% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_codebook.R
\name{generate_codebook}
\alias{generate_codebook}
\title{Documentation for variables from `compile_acs_data()`}
\usage{
generate_codebook(variables = NULL, years = NULL)
}
\arguments{
\item{variables}{A vector of column names. Column names that are not generated
by `compile_acs_data()` are returned in the codebook with missing definitions.}

\item{years}{A character vector (or coercible to the same) comprising one or more
four-digit years for which to pull variable definitions.}
}
\value{
A tibble containing the names and definitions of  the variables
passed to `variables`. When variables have different definitions across years,
each variable is reflected more than once in the codebook. When a variable has
a consistent definition across years, it is only represented once. Column names
passed to `variables` that are not generated by `compile_acs_data()` are returned
in the codebook with missing definitions.
}
\description{
`generate_codebook()` returns a codebook for variables returned
from `compile_acs_data()`.
}
\details{
Generates a tibble of variable names and definitions that describe
how each variable was created. `generate_codebook()` is called behind the scenes
as part of `compile_acs_data()` and the resulting codebook is attached as an attribute
to the output; it can be accessed via `compile_acs_data() %>% attr("codebook")`.
}
\examples{
df = compile_acs_data(
  variables = list_acs_variables(year = 2022),
  years = c(2022),
  geography = "county",
  states = "NJ",
  counties = NULL,
  retain_moes = TRUE)
codebook = generate_codebook(
  variables = colnames(df \%>\% dplyr::select(-matches("percent"))),
  years = c(2022))
}
\seealso{
[urbnindicators::compile_acs_data()], which automatically returns the
results of `generate_codebook()` attached to the primary data ouput.
}
