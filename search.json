[{"path":"https://ui-research.github.io/urbnindicators/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://ui-research.github.io/urbnindicators/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://ui-research.github.io/urbnindicators/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://ui-research.github.io/urbnindicators/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://ui-research.github.io/urbnindicators/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://ui-research.github.io/urbnindicators/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://ui-research.github.io/urbnindicators/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://ui-research.github.io/urbnindicators/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://ui-research.github.io/urbnindicators/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://ui-research.github.io/urbnindicators/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://ui-research.github.io/urbnindicators/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://ui-research.github.io/urbnindicators/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://ui-research.github.io/urbnindicators/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://ui-research.github.io/urbnindicators/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://ui-research.github.io/urbnindicators/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://ui-research.github.io/urbnindicators/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://ui-research.github.io/urbnindicators/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://ui-research.github.io/urbnindicators/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://ui-research.github.io/urbnindicators/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://ui-research.github.io/urbnindicators/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://ui-research.github.io/urbnindicators/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://ui-research.github.io/urbnindicators/articles/design-philosophy.html","id":"design-choices","dir":"Articles","previous_headings":"","what":"Design choices","title":"Design Philosophy","text":"Support geographies tract level . Block groups supported present margins error block group-level estimates often large make estimates meaningless. may consider adding support block groups future (open issue GitHub interest). Support five-year estimates . One-year estimates bring similar margin error challenges, even relatively larger-population geographies, tracts, zip codes, even places counties. may consider adding support future (open issue GitHub interest). Support subset ACS variables. Pre-calculated ACS estimates cover tens thousands different variables. , work, small fraction used frequently. ’ve tried select common variables return default, cognizant present, every additional variable returned results slower query. Open issue GitHub ’d like see additional variables added default set. Rename variables. default variable names returned ACS API human-friendly. challenging determine given variable represents ’re looking name like B01001_001E, ’re looking dozen hundred variables, ’s easy accidentally misinterpret mis-select variable(s) want. reasons, apply meaningful names every returned variable, retaining consistency variable names within table ’s easy select operate sets interrelated variables. downside approach default API variable names used publications, find documentation anywhere (apart codebook returned package!) variable named, example, race_personofcolor_percent. Many variables codebook original API names included definitions, plan continue expand documentation make comprehensive easier work . Return large, wide dataset. underlying library(tidycensus) interface ACS API can return single variable table, often users employ . Conversely, ’s common want dozens perhaps even hundreds variables–use case around library(urbnindicators) designed. Queries small geographies can slow, result dataset containing everything want (hopefully) (likely). ’re just looking one, , variables, library(tidycensus) probably better approach, can still use functions like urbnindicators::select_variables_by_name(), urbnindicators::filter_variables(), urbnindicators::list_acs_variables() select sensibly name variables returned library(tidycensus). future, ’ll add caching options don’t repeatedly make queries can instead read results local directory.","code":""},{"path":"https://ui-research.github.io/urbnindicators/articles/urbnindicators.html","id":"a-typical-workflow","dir":"Articles","previous_headings":"","what":"A Typical Workflow","title":"urbnindicators","text":"tidycensus provides suite functions working ACS data R. fact, urbnindicators built top tidycensus, highly encourage unfamiliar explore tidycensus using urbnindicators. tidycensus versatile allows users access many datasets (variables within datasets) urbnindicators, can require significant amount knowledge time support robust analysis, leading many users fall common pitfalls without realizing ’ve made error(s). ’s typical tidycensus workflow:","code":""},{"path":"https://ui-research.github.io/urbnindicators/articles/urbnindicators.html","id":"identify-variables-to-query","dir":"Articles","previous_headings":"A Typical Workflow","what":"Identify variables to query","title":"urbnindicators","text":"load built-codebook search construct interest (disability). leaves us 500 variables choose . Let’s imagine ’re interested calculating share individuals disability; requires two variables (conceptually): number people disability number people. variable(s) select? ’s clear answer. variables relating disability reflect disability least one characteristic (e.g., “sex age disability status”). want calculate percent individuals disability, want using robust available variables (.e., reflect individuals reported disability status), whereas variables reflect disability may smaller counts characteristics combined disability status (e.g., health insurance coverage status) may available subset individuals disability status available. Putting challenges aside, let’s imagine select table variables prefixed “B18101”, “Sex Age Disability”. think respondents asked disability status also asked sex age. pass tidycensus : returns us 21 observations–one county NJ–along intimidating 80 columns meaningless names along lines B18101_039E.","code":"acs_codebook = tidycensus::load_variables(dataset = \"acs5\", year = 2022)  acs_codebook %>%   dplyr::filter(stringr::str_detect(concept, \"Disability\")) %>%    head() #> # A tibble: 6 × 4 #>   name       label                                             concept geography #>   <chr>      <chr>                                             <chr>   <chr>     #> 1 B10052_001 Estimate!!Total:                                  Disabi… tract     #> 2 B10052_002 Estimate!!Total:!!With any disability:            Disabi… tract     #> 3 B10052_003 Estimate!!Total:!!With any disability:!!Grandpar… Disabi… tract     #> 4 B10052_004 Estimate!!Total:!!With any disability:!!Grandpar… Disabi… tract     #> 5 B10052_005 Estimate!!Total:!!With any disability:!!Grandpar… Disabi… tract     #> 6 B10052_006 Estimate!!Total:!!With any disability:!!Grandpar… Disabi… tract df_disability = get_acs(   geography = \"county\",   state = \"NJ\",    year = 2022,   output = \"wide\",   survey = \"acs5\",   table = \"B18101\") #> Getting data from the 2018-2022 5-year ACS #> Loading ACS5 variables for 2022 from table B18101. To cache this dataset for faster access to ACS tables in the future, run this function with `cache_table = TRUE`. You only need to do this once per ACS dataset.  df_disability %>% dim() #> [1] 21 80 df_disability %>% colnames() #>  [1] \"GEOID\"       \"NAME\"        \"B18101_001E\" \"B18101_001M\" \"B18101_002E\" #>  [6] \"B18101_002M\" \"B18101_003E\" \"B18101_003M\" \"B18101_004E\" \"B18101_004M\" #> [11] \"B18101_005E\" \"B18101_005M\" \"B18101_006E\" \"B18101_006M\" \"B18101_007E\" #> [16] \"B18101_007M\" \"B18101_008E\" \"B18101_008M\" \"B18101_009E\" \"B18101_009M\" #> [21] \"B18101_010E\" \"B18101_010M\" \"B18101_011E\" \"B18101_011M\" \"B18101_012E\" #> [26] \"B18101_012M\" \"B18101_013E\" \"B18101_013M\" \"B18101_014E\" \"B18101_014M\" #> [31] \"B18101_015E\" \"B18101_015M\" \"B18101_016E\" \"B18101_016M\" \"B18101_017E\" #> [36] \"B18101_017M\" \"B18101_018E\" \"B18101_018M\" \"B18101_019E\" \"B18101_019M\" #> [41] \"B18101_020E\" \"B18101_020M\" \"B18101_021E\" \"B18101_021M\" \"B18101_022E\" #> [46] \"B18101_022M\" \"B18101_023E\" \"B18101_023M\" \"B18101_024E\" \"B18101_024M\" #> [51] \"B18101_025E\" \"B18101_025M\" \"B18101_026E\" \"B18101_026M\" \"B18101_027E\" #> [56] \"B18101_027M\" \"B18101_028E\" \"B18101_028M\" \"B18101_029E\" \"B18101_029M\" #> [61] \"B18101_030E\" \"B18101_030M\" \"B18101_031E\" \"B18101_031M\" \"B18101_032E\" #> [66] \"B18101_032M\" \"B18101_033E\" \"B18101_033M\" \"B18101_034E\" \"B18101_034M\" #> [71] \"B18101_035E\" \"B18101_035M\" \"B18101_036E\" \"B18101_036M\" \"B18101_037E\" #> [76] \"B18101_037M\" \"B18101_038E\" \"B18101_038M\" \"B18101_039E\" \"B18101_039M\""},{"path":"https://ui-research.github.io/urbnindicators/articles/urbnindicators.html","id":"calculating-our-measure-of-interest","dir":"Articles","previous_headings":"A Typical Workflow","what":"Calculating our measure of interest","title":"urbnindicators","text":"Now need figure aggregate needed variables denominator numerator order calculate valid “% Disabled” measure, task feasible time-intensive error-prone. analysis leverages single measure, especially measures required distinct tables, workflow burdensome creates significant surface area undetected errors. acquire data multiple years, multiple different types geographies, also requires repeated calls get_acs(). time, many analysts overwhelmed unsure combine margins error returned get_acs(), opting simply drop critical information analysis go calculating “% Disabled”.","code":""},{"path":"https://ui-research.github.io/urbnindicators/articles/urbnindicators.html","id":"using-urbnindicators","dir":"Articles","previous_headings":"","what":"Using urbnindicators","title":"urbnindicators","text":"urbnindicators abstracts workflow behind scenes. Instead call tidycensus::get_acs(), call urbnindicators::compile_acs_data() returns dataset raw ACS measures derived estimates (share individuals disabled). dataset includes range measures–spanning things health insurance, employment, housing costs, race ethnicity–just one variable table ACS.","code":""},{"path":"https://ui-research.github.io/urbnindicators/articles/urbnindicators.html","id":"acquire-data","dir":"Articles","previous_headings":"Using urbnindicators","what":"Acquire data","title":"urbnindicators","text":"’s simple call . Note can provide vector years /states want data different time periods geographies.","code":"df_urbnindicators = urbnindicators::compile_acs_data(   variables = NULL,   years = 2022,   geography = \"county\",   states = \"NJ\",   spatial = TRUE) #>   |                                                                              |                                                                      |   0%  |                                                                              |                                                                      |   1%  |                                                                              |=                                                                     |   1%  |                                                                              |=                                                                     |   2%  |                                                                              |==                                                                    |   2%  |                                                                              |==                                                                    |   3%  |                                                                              |==                                                                    |   4%  |                                                                              |===                                                                   |   4%  |                                                                              |===                                                                   |   5%  |                                                                              |====                                                                  |   5%  |                                                                              |====                                                                  |   6%  |                                                                              |=====                                                                 |   6%  |                                                                              |=====                                                                 |   7%  |                                                                              |=====                                                                 |   8%  |                                                                              |======                                                                |   8%  |                                                                              |======                                                                |   9%  |                                                                              |=======                                                               |  10%  |                                                                              |=======                                                               |  11%  |                                                                              |========                                                              |  11%  |                                                                              |========                                                              |  12%  |                                                                              |=========                                                             |  12%  |                                                                              |=========                                                             |  13%  |                                                                              |==========                                                            |  14%  |                                                                              |==========                                                            |  15%  |                                                                              |===========                                                           |  15%  |                                                                              |===========                                                           |  16%  |                                                                              |============                                                          |  17%  |                                                                              |============                                                          |  18%  |                                                                              |=============                                                         |  18%  |                                                                              |=============                                                         |  19%  |                                                                              |==============                                                        |  20%  |                                                                              |==============                                                        |  21%  |                                                                              |===============                                                       |  21%  |                                                                              |===============                                                       |  22%  |                                                                              |================                                                      |  22%  |                                                                              |================                                                      |  23%  |                                                                              |=================                                                     |  24%  |                                                                              |=================                                                     |  25%  |                                                                              |==================                                                    |  25%  |                                                                              |==================                                                    |  26%  |                                                                              |===================                                                   |  27%  |                                                                              |===================                                                   |  28%  |                                                                              |====================                                                  |  28%  |                                                                              |====================                                                  |  29%  |                                                                              |=====================                                                 |  30%  |                                                                              |======================                                                |  31%  |                                                                              |======================                                                |  32%  |                                                                              |=======================                                               |  32%  |                                                                              |=======================                                               |  33%  |                                                                              |========================                                              |  34%  |                                                                              |========================                                              |  35%  |                                                                              |=========================                                             |  35%  |                                                                              |=========================                                             |  36%  |                                                                              |==========================                                            |  37%  |                                                                              |==========================                                            |  38%  |                                                                              |===========================                                           |  38%  |                                                                              |===========================                                           |  39%  |                                                                              |============================                                          |  39%  |                                                                              |=============================                                         |  41%  |                                                                              |=============================                                         |  42%  |                                                                              |===============================                                       |  44%  |                                                                              |===============================                                       |  45%  |                                                                              |=====================================                                 |  53%  |                                                                              |======================================                                |  54%  |                                                                              |========================================                              |  57%  |                                                                              |=================================================                     |  71%  |                                                                              |==================================================                    |  72%  |                                                                              |===================================================                   |  72%  |                                                                              |===================================================                   |  73%  |                                                                              |=====================================================                 |  76%  |                                                                              |=========================================================             |  82%  |                                                                              |==========================================================            |  82%  |                                                                              |==========================================================            |  83%  |                                                                              |============================================================          |  86%  |                                                                              |=============================================================         |  87%  |                                                                              |================================================================      |  92%  |                                                                              |======================================================================| 100%"},{"path":"https://ui-research.github.io/urbnindicators/articles/urbnindicators.html","id":"analyze-or-visualize-data","dir":"Articles","previous_headings":"Using urbnindicators","what":"Analyze or visualize data","title":"urbnindicators","text":"now ’re ready analyze plot data. Simplistically:","code":"df_urbnindicators %>%   select(matches(\"disability.*percent$\"), geometry) %>%   sf::st_as_sf() %>%   ggplot() +     geom_sf(aes(fill = disability_percent)) +     theme_urbn_map() +     scale_fill_continuous(labels = scales::percent, trans = \"reverse\") +     labs(       title = \"Disability rates appear higher in southern NJ\",       subtitle = \"Disability rates by county, NJ, 2018-2022 ACS\",       fill = \"Population with an ACS-defined disability (%)\" %>% str_wrap(20))"},{"path":"https://ui-research.github.io/urbnindicators/articles/urbnindicators.html","id":"document-data","dir":"Articles","previous_headings":"Using urbnindicators","what":"Document data","title":"urbnindicators","text":"’s lot happening behind scenes, ’s important understand variable represents calculated. urbnindicators includes codebook attribute dataframe returned compile_acs_data(). codebook specifies variable type provides definition variable calculated. (though ) variables directly available ACS count variables, number people receiving public assistance. Many variables calculated urbnindicators percent variables, divide two count variables. common convention percent variable calculated dividing count variable (e.g., public_assistance_received) universe variable corresponding table (e.g., public_assistance_universe). derived variables complex, commute mode. , ’ve aggregated three counts representing different types individual motor vehicle transportation create numerator, denominator table universe minus individuals work home. allows us say something along lines : “individuals commute work, XX% use motor vehicle primary commute mode.”","code":"df_urbnindicators %>%   attr(\"codebook\") #> # A tibble: 868 × 3 #>    calculated_variable                     variable_type definition              #>    <chr>                                   <chr>         <chr>                   #>  1 total_population_universe               Count         This is a raw ACS esti… #>  2 public_assistance_universe              Count         This is a raw ACS esti… #>  3 public_assistance_received              Count         This is a raw ACS esti… #>  4 snap_universe                           Count         This is a raw ACS esti… #>  5 snap_received                           Count         This is a raw ACS esti… #>  6 household_income_quintile_upper_limit_1 Quintile ($)  This is a raw ACS esti… #>  7 household_income_quintile_upper_limit_2 Quintile ($)  This is a raw ACS esti… #>  8 household_income_quintile_upper_limit_3 Quintile ($)  This is a raw ACS esti… #>  9 household_income_quintile_upper_limit_4 Quintile ($)  This is a raw ACS esti… #> 10 household_income_quintile_upper_limit_5 Quintile ($)  This is a raw ACS esti… #> # ℹ 858 more rows df_urbnindicators %>%   attr(\"codebook\") %>%   filter(str_detect(calculated_variable, \"public_assistance\")) #> # A tibble: 3 × 3 #>   calculated_variable                variable_type definition                    #>   <chr>                              <chr>         <chr>                         #> 1 public_assistance_universe         Count         This is a raw ACS estimate.   #> 2 public_assistance_received         Count         This is a raw ACS estimate.   #> 3 public_assistance_received_percent Percent       Numerator = public_assistanc… df_urbnindicators %>%   attr(\"codebook\") %>%   filter(str_detect(calculated_variable, \"means.*motor_vehicle\")) #> # A tibble: 1 × 3 #>   calculated_variable                             variable_type definition       #>   <chr>                                           <chr>         <chr>            #> 1 means_transportation_work_motor_vehicle_percent Percent       Numerator = mea…"},{"path":"https://ui-research.github.io/urbnindicators/articles/urbnindicators.html","id":"so-whats-the-value-add","dir":"Articles","previous_headings":"","what":"So What’s the Value Add?","title":"urbnindicators","text":"Hopefully process illustrated advantages, fall two buckets: efficiency reliability. Efficiency: Sensible decisions variable table selection eliminate need hunt right variables. Raw ACS variables included alongside pre-calculated variables, percentages, directly available ACS. Query multiple years /multiple states single function call– need loop desired years states. Reliability: Alphanumeric variable codes (e.g., B18101_001) replaced meaningful variable names (e.g., disability_percent)–eliminating common source confusion error. Data returned codebook documents variables created represent. Behind--scenes quality checks help ensure calculations correct (though users still verify results !).","code":""},{"path":"https://ui-research.github.io/urbnindicators/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Curran-Groome. Author, maintainer.","code":""},{"path":"https://ui-research.github.io/urbnindicators/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Curran-Groome W (2025). urbnindicators: Box Social Science Indicators American Community Survey (ACS). R package version 0.0.0.9301, https://ui-research.github.io/urbnindicators/.","code":"@Manual{,   title = {urbnindicators: Out of the Box Social Science Indicators from the American Community Survey (ACS)},   author = {Will Curran-Groome},   year = {2025},   note = {R package version 0.0.0.9301},   url = {https://ui-research.github.io/urbnindicators/}, }"},{"path":[]},{"path":"https://ui-research.github.io/urbnindicators/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Out of the Box Social Science Indicators from the American Community Survey (ACS)","text":"goal urbnindicators provide users analysis-ready data American Community Survey (ACS). single function call, get: Hundreds standardized variables, percentages, addition raw count variables used produce . Meaningful, consistent variable names. codebook describes variable calculated. built-capacity pull data multiple years multiple states. Supplemental measures, population density, aren’t available ACS. Built-quality checks help ensure calculated variables accurate.","code":""},{"path":"https://ui-research.github.io/urbnindicators/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Out of the Box Social Science Indicators from the American Community Survey (ACS)","text":"Install development version urbnindicators GitHub : Note package active development frequent updates–check ensure recent version installed!","code":"install.packages(\"renv\") renv::install(\"UI-Research/urbnindicators\")"},{"path":"https://ui-research.github.io/urbnindicators/index.html","id":"use","dir":"","previous_headings":"","what":"Use","title":"Out of the Box Social Science Indicators from the American Community Survey (ACS)","text":"","code":"set_urbn_defaults(style = \"print\")  acs_df = compile_acs_data(   variables = NULL,   years = c(2017, 2022),   geography = \"county\",   states = \"NJ\",   counties = NULL,   spatial = TRUE)   plot_data = acs_df %>%    transmute(     county_name = NAME %>% str_remove(\" County, New Jersey\"),      race_personofcolor_percent,      data_source_year)  state_averages = plot_data %>%   group_by(data_source_year) %>%   summarize(mean_race_personofcolor_percent = mean(race_personofcolor_percent)) %>%   arrange(data_source_year) %>%   pull()  dumbbell_data = plot_data %>%    pivot_wider(     names_from = data_source_year,      values_from = race_personofcolor_percent,      names_prefix = \"year_\")  ggplot() +   geom_segment(     data = dumbbell_data,     aes(       x = reorder(county_name, year_2017),       y = year_2017,       yend = year_2022),     color = palette_urbn_main[7],     linewidth = 1) +   geom_point(     data = plot_data,      aes(       x = reorder(county_name, race_personofcolor_percent),        y = race_personofcolor_percent,        color = factor(data_source_year))) +   annotate(     \"text\",      y = .31,       x = 21.5,      label = \"State mean (2017)\",      fontface = \"bold.italic\",      color = palette_urbn_main[1]) +   annotate(     \"text\",      y = .47,       x = 21.5,      label = \"State mean (2022)\",      fontface = \"bold.italic\",      color = palette_urbn_main[2]) +   geom_hline(     yintercept = state_averages[1],      linetype = \"dashed\",      color = palette_urbn_main[1]) +   geom_hline(     yintercept = state_averages[2],      linetype = \"dashed\",      color = palette_urbn_main[2]) +   labs(     title = \"Change in NJ Counties' Racial Composition, 2017 to 2022\",     subtitle = paste0(       \"On average, counties in NJ saw a \",        round((state_averages[2] - state_averages[1]), digits = 3) * 100,        \" pecentage point increase in the share of the population who are people of color from 2017 to 2022.\") %>%       str_wrap(120),      x = \"County\",      y = \"Share of population who are people of color\",     color = \"Year\") +   scale_x_discrete(expand = expansion(mult = c(.03, 0.04))) +   scale_y_continuous(     breaks = c(0, .25, .50, .75, 1.0),     limits = c(0, .75),     labels = scales::percent) +   coord_flip()"},{"path":"https://ui-research.github.io/urbnindicators/index.html","id":"credits","dir":"","previous_headings":"","what":"Credits","title":"Out of the Box Social Science Indicators from the American Community Survey (ACS)","text":"package built top enormously indebted library(tidycensus), provides core functionality accessing Census Bureau API. users want additional variables, library(tidycensus) exposes entire range pre-tabulated variables available ACS, well access ACS microdata Census Bureau datasets. Learn : https://walker-data.com/tidycensus/index.html.","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/calculate_cvs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate coefficients of variation — calculate_cvs","title":"Calculate coefficients of variation — calculate_cvs","text":"Calculate coefficients variation","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/calculate_cvs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate coefficients of variation — calculate_cvs","text":"","code":"calculate_cvs(.df)"},{"path":"https://ui-research.github.io/urbnindicators/reference/calculate_cvs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate coefficients of variation — calculate_cvs","text":".df dataset returned compile_acs_data(). argument parameter must attribute named codebook () true results compile_acs_data().","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/calculate_cvs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate coefficients of variation — calculate_cvs","text":"modified dataframe includes newly calculated indicators.","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/calculate_cvs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate coefficients of variation — calculate_cvs","text":"Create CVs ACS estimates derived indicators","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/calculate_cvs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate coefficients of variation — calculate_cvs","text":"","code":"if (FALSE) { # \\dontrun{ df = compile_acs_data(   variables = list_acs_variables(year = 2022),   years = c(2022),   geography = \"county\",   states = \"NJ\",   counties = NULL,   spatial = FALSE) cvs = calculate_cvs(df) %>%  dplyr::select(matches(\"_CV$\")) } # }"},{"path":"https://ui-research.github.io/urbnindicators/reference/calculate_segregation_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate segregation at multiple geographies — calculate_segregation_metrics","title":"Calculate segregation at multiple geographies — calculate_segregation_metrics","text":"Calculate multi-group segregation metrics using Mutual Information Index (M)","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/calculate_segregation_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate segregation at multiple geographies — calculate_segregation_metrics","text":"","code":"calculate_segregation_metrics(   data,   data_format,   nesting_geography_geoid_length )"},{"path":"https://ui-research.github.io/urbnindicators/reference/calculate_segregation_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate segregation at multiple geographies — calculate_segregation_metrics","text":"data dataframe containing GEOID column required input measures, e.g., race income, single geography (e.g., tract). GEOID column must character column, GEOID must unique. data formatted wide, must least two columns addition GEOID. data formatted long, must single columd addition GEOID. inputted data contain measures.example: tibble::tribble( ~GEOID, ~race_nonhispanic_white_alone, ~race_nonhispanic_black_alone, \"37001020100\", 2835, 1035, \"37001020200\", 1205, 1321) data_format Describe structure inputted data. One \"wide\" \"long\". Data returned format passed function. nesting_geography_geoid_length length GEOID identifies nesting geographies. example, smaller_geography_data defined tract level (GEOID length 11), nesting_geography_geoid_length = 5 return segregation metrics counties (GEOID length 5) tracts (relative tracts within county).","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/calculate_segregation_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate segregation at multiple geographies — calculate_segregation_metrics","text":"dataframe comprising segregation estimates associated p-values geographic levels.","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/calculate_segregation_metrics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate segregation at multiple geographies — calculate_segregation_metrics","text":"Given data smaller geography (e.g., tract), calculate_segregation_metrics() returns Mutual Information Index (M) values associated p-values perfectly nested larger geography (e.g., county state) well decomposed values smaller geography (e.g., tract). Note segregation calculations rely segregation users refer package https://github.com/elbersb/segregation implementation details.","code":""},{"path":[]},{"path":"https://ui-research.github.io/urbnindicators/reference/calculate_segregation_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate segregation at multiple geographies — calculate_segregation_metrics","text":"","code":"if (FALSE) { # \\dontrun{ variables = c(   race_nonhispanic_white_alone_ = \"B03002_003\",   race_nonhispanic_black_alone_ = \"B03002_004\",   race_nonhispanic_native_alone_ = \"B03002_005\",   race_nonhispanic_asian_alone_ = \"B03002_006\",   race_nonhispanic_nhpi_alone_ = \"B03002_007\") df_long = tidycensus::get_acs(   geography = \"tract\",   state = \"SC\",   variables = variables,   output = \"tidy\") %>%   # can only include a GEOID column and segregation-related measures   dplyr::select(-c(NAME, matches(\"_M$\"))) calculate_segregation_metrics(   data = df_long,   data_format = \"long\",   nesting_geography_geoid_length = 5) } # }"},{"path":"https://ui-research.github.io/urbnindicators/reference/compile_acs_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Analysis-ready social science measures — compile_acs_data","title":"Analysis-ready social science measures — compile_acs_data","text":"Construct measures frequently used social sciences research, leveraging tidycensus::get_acs() acquire raw estimates Census Bureau API.","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/compile_acs_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analysis-ready social science measures — compile_acs_data","text":"","code":"compile_acs_data(   variables = NULL,   years = c(2022),   geography = \"county\",   states = NULL,   counties = NULL,   spatial = FALSE )"},{"path":"https://ui-research.github.io/urbnindicators/reference/compile_acs_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analysis-ready social science measures — compile_acs_data","text":"variables named vector ACS variables returned urbnindicators::list_acs_variables(). years character vector (coercible ) comprising one four-digit years pull five-year American Community Survey estimates. geography geography type accepted tidycensus::get_acs(), e.g., \"tract\", \"county\", \"state\", among others. Geographies tract level supported. states vector one state names, abbreviations, codes accepted tidycensus::get_acs(). counties vector five-digit county FIPS codes. specified, parameter override states parameter. NULL, counties state(s) specified states parameter included. spatial Boolean. Return simple features (sf), spatially-enabled dataframe?","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/compile_acs_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analysis-ready social science measures — compile_acs_data","text":"dataframe containing requested variables, MOEs, series derived variables, percentages, year data. Returned data formatted wide. codebook generated generate_codebook() attached can accessed via compile_acs_data() %>% attr(\"codebook\").","code":""},{"path":[]},{"path":"https://ui-research.github.io/urbnindicators/reference/compile_acs_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analysis-ready social science measures — compile_acs_data","text":"","code":"if (FALSE) { # \\dontrun{ acs_variables = list_acs_variables(year = \"2022\") df = compile_acs_data(   variables = acs_variables,   years = c(2021, 2022),   geography = \"county\",   states = \"NJ\",   counties = NULL,   spatial = FALSE)   } # }"},{"path":"https://ui-research.github.io/urbnindicators/reference/cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a coefficient of variation — cv","title":"Calculate a coefficient of variation — cv","text":"Calculate coefficient variation","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a coefficient of variation — cv","text":"","code":"cv(estimate, se)"},{"path":"https://ui-research.github.io/urbnindicators/reference/cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a coefficient of variation — cv","text":"estimate estimate se standard error","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/cv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a coefficient of variation — cv","text":"coefficient variation 90% level","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/cv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate a coefficient of variation — cv","text":"Return coefficient variation 90% level","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/filter_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Easily filter ACS variables — filter_variables","title":"Easily filter ACS variables — filter_variables","text":"Filter results select_variables_by_name() based match_type relative match_string.","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/filter_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Easily filter ACS variables — filter_variables","text":"","code":"filter_variables(variable_vector, match_string, match_type = \"positive\")"},{"path":"https://ui-research.github.io/urbnindicators/reference/filter_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Easily filter ACS variables — filter_variables","text":"variable_vector named vector (intended use named ACS variables). match_string string filter (filter) elements variable_vector. match_type Whether include (match_type = \"positive\") exclude (match_type = \"negative\") matching elements.","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/filter_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Easily filter ACS variables — filter_variables","text":"elements variable_vector /match match_string.","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/filter_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Easily filter ACS variables — filter_variables","text":"","code":"if (FALSE) { # \\dontrun{ codebook = tidycensus::load_variables(dataset = \"acs5\", year = 2022) selected_variables = select_variables_by_name(\"B16005_\", census_codebook = codebook) filter_variables(   variable_vector = selected_variables,   match_string = \"universe_$|native_$|foreign_born_$|only|very_well\",   match_type = \"positive\") } # }"},{"path":"https://ui-research.github.io/urbnindicators/reference/generate_codebook.html","id":null,"dir":"Reference","previous_headings":"","what":"Document variables from compile_acs_data() — generate_codebook","title":"Document variables from compile_acs_data() — generate_codebook","text":"Define variables produced via urbnindicators::compile_acs_data() calculated.","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/generate_codebook.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Document variables from compile_acs_data() — generate_codebook","text":"","code":"generate_codebook(.data)"},{"path":"https://ui-research.github.io/urbnindicators/reference/generate_codebook.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Document variables from compile_acs_data() — generate_codebook","text":".data dataset returned urbnindicators::compile_acs_data().","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/generate_codebook.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Document variables from compile_acs_data() — generate_codebook","text":"tibble containing names definitions  variables returned urbnindicators::compile_acs_data().","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/generate_codebook.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Document variables from compile_acs_data() — generate_codebook","text":"Generates tibble variable names definitions describe variable created.","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/generate_codebook.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Document variables from compile_acs_data() — generate_codebook","text":"","code":"if (FALSE) { # \\dontrun{ df = compile_acs_data(   variables = list_acs_variables(year = 2022),   years = c(2022),   geography = \"county\",   states = \"NJ\",   counties = NULL,   spatial = FALSE) codebook = generate_codebook(.data = df) } # }"},{"path":"https://ui-research.github.io/urbnindicators/reference/internal_compute_acs_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate ACS measures — internal_compute_acs_variables","title":"Calculate ACS measures — internal_compute_acs_variables","text":"Calculates derived ACS indicators.","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/internal_compute_acs_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate ACS measures — internal_compute_acs_variables","text":"","code":"internal_compute_acs_variables(.data)"},{"path":"https://ui-research.github.io/urbnindicators/reference/internal_compute_acs_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate ACS measures — internal_compute_acs_variables","text":".data dataset returned compile_acs_data().","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/internal_compute_acs_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate ACS measures — internal_compute_acs_variables","text":"modified dataframe includes newly calculated indicators.","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/internal_compute_acs_variables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate ACS measures — internal_compute_acs_variables","text":"internal function used calculate indicators derived variable definitions codebook.","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/internal_compute_acs_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate ACS measures — internal_compute_acs_variables","text":"","code":"if (FALSE) { # \\dontrun{ df = compile_acs_data(   variables = list_acs_variables(year = 2022),   years = c(2022),   geography = \"county\",   states = \"NJ\",   counties = NULL,   spatial = FALSE) internal_compute_acs_variables(.data = df) } # }"},{"path":"https://ui-research.github.io/urbnindicators/reference/list_acs_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Return ACS variables codes and names — list_acs_variables","title":"Return ACS variables codes and names — list_acs_variables","text":"Generate meaningful names ACS variable codes based metadata return vector, along semantic names. Intended use compile_acs_data().","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/list_acs_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return ACS variables codes and names — list_acs_variables","text":"","code":"list_acs_variables(year = \"2022\")"},{"path":"https://ui-research.github.io/urbnindicators/reference/list_acs_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return ACS variables codes and names — list_acs_variables","text":"year year variable names selected.","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/list_acs_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return ACS variables codes and names — list_acs_variables","text":"named vector variable codes (specified Census Bureau's API) semantically-meaningful names (e.g., \"race_black_alone_nonhispanic\").","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/list_acs_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return ACS variables codes and names — list_acs_variables","text":"","code":"list_acs_variables(year = \"2022\") %>% head() #>               total_population_universe_  #>                             \"B01003_001\"  #>              public_assistance_universe_  #>                             \"B19058_001\"  #>              public_assistance_received_  #>                             \"B19058_002\"  #>                           snap_universe_  #>                             \"B22003_001\"  #>                           snap_received_  #>                             \"B22003_002\"  #> household_income_quintile_upper_limit_1_  #>                             \"B19080_001\""},{"path":"https://ui-research.github.io/urbnindicators/reference/make_pretty_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Pretty-ify variable names — make_pretty_names","title":"Pretty-ify variable names — make_pretty_names","text":"Variable names lower-case underscore-separated. converts title case replaces underscores spaces. also makes adjustments facilitate reading interpretation variables context , example, plots tables.","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/make_pretty_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pretty-ify variable names — make_pretty_names","text":"","code":"make_pretty_names(.data)"},{"path":"https://ui-research.github.io/urbnindicators/reference/make_pretty_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pretty-ify variable names — make_pretty_names","text":".data data.frame–something coercible thereto–character vector containing variables/variable names converted publication-appropriate formats.","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/make_pretty_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pretty-ify variable names — make_pretty_names","text":"","code":"if (FALSE) { # \\dontrun{ # df = compile_acs_data(  df %>% make_pretty_names() } # }"},{"path":"https://ui-research.github.io/urbnindicators/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://ui-research.github.io/urbnindicators/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/safe_divide.html","id":null,"dir":"Reference","previous_headings":"","what":"Division without NAs — safe_divide","title":"Division without NAs — safe_divide","text":"Return 0 divisor 0.","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/safe_divide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Division without NAs — safe_divide","text":"","code":"safe_divide(x, y)"},{"path":"https://ui-research.github.io/urbnindicators/reference/safe_divide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Division without NAs — safe_divide","text":"x numeric scalar. y numeric scalar.","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/safe_divide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Division without NAs — safe_divide","text":"traditional dividend cases except y == 0, case returns 0.","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/safe_divide.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Division without NAs — safe_divide","text":"modified division operation returns zero divisor zero rather returning NA. Otherwise returns quotient.","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/safe_divide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Division without NAs — safe_divide","text":"","code":"safe_divide(1, 2) #> [1] 0.5 safe_divide(3, 0) #> [1] 0"},{"path":"https://ui-research.github.io/urbnindicators/reference/se_proportion_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a pooled standard error for a proportion or ratio — se_proportion_ratio","title":"Calculate a pooled standard error for a proportion or ratio — se_proportion_ratio","text":"Calculate pooled standard error proportion ratio","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/se_proportion_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a pooled standard error for a proportion or ratio — se_proportion_ratio","text":"","code":"se_proportion_ratio(   estimate_numerator,   estimate_denominator,   moe_numerator = NULL,   moe_denominator = NULL,   se_numerator = NULL,   se_denominator = NULL,   type = \"proportion\" )"},{"path":"https://ui-research.github.io/urbnindicators/reference/se_proportion_ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a pooled standard error for a proportion or ratio — se_proportion_ratio","text":"estimate_numerator estimate numerator estimate_denominator estimate denominator moe_numerator margin error numerator moe_denominator margin error denominator se_numerator standard error numerator se_denominator standard error denominator type type estimate calculated, either \"proportion\" \"ratio\"","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/se_proportion_ratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a pooled standard error for a proportion or ratio — se_proportion_ratio","text":"pooled 90% standard error","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/se_proportion_ratio.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate a pooled standard error for a proportion or ratio — se_proportion_ratio","text":"estimate derived using division–whether resulting estimate proportion ratio–calculate pooled standard error. convenience parameters support SEs MOEs numerator denominator, one –either SEs MOEs–can supplied–must left NULL.","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/se_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a simple standard error — se_simple","title":"Calculate a simple standard error — se_simple","text":"Calculate simple standard error","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/se_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a simple standard error — se_simple","text":"","code":"se_simple(moe)"},{"path":"https://ui-research.github.io/urbnindicators/reference/se_simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a simple standard error — se_simple","text":"moe margin error, vector thereof","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/se_simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a simple standard error — se_simple","text":"90% standard error","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/se_simple.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate a simple standard error — se_simple","text":"Create standard error 90% level 90% margin error","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/se_sum.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a pooled standard error for a summed or subtracted estimate — se_sum","title":"Calculate a pooled standard error for a summed or subtracted estimate — se_sum","text":"Calculate pooled standard error summed subtracted estimate","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/se_sum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a pooled standard error for a summed or subtracted estimate — se_sum","text":"","code":"se_sum(...)"},{"path":"https://ui-research.github.io/urbnindicators/reference/se_sum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a pooled standard error for a summed or subtracted estimate — se_sum","text":"... unquoted names margin error corresponding estimate variables added subtracted","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/se_sum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a pooled standard error for a summed or subtracted estimate — se_sum","text":"pooled 90% standard error","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/se_sum.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate a pooled standard error for a summed or subtracted estimate — se_sum","text":"estimate derived adding subtracting multiple estimates, calculate pooled standard error","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/select_variables_by_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Easily rename ACS variables — select_variables_by_name","title":"Easily rename ACS variables — select_variables_by_name","text":"Given name ACS variable (string matches one variables), generate named character vector original variable names meaningful names.","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/select_variables_by_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Easily rename ACS variables — select_variables_by_name","text":"","code":"select_variables_by_name(variable_name, census_codebook)"},{"path":"https://ui-research.github.io/urbnindicators/reference/select_variables_by_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Easily rename ACS variables — select_variables_by_name","text":"variable_name named vector (intended use named ACS variables). census_codebook object returned tidycensus::load_variables().","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/select_variables_by_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Easily rename ACS variables — select_variables_by_name","text":"named character vector containing variables matched variable_name census_codebook, semantically-meaningful names derived metadata fields contained census_codebook.","code":""},{"path":"https://ui-research.github.io/urbnindicators/reference/select_variables_by_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Easily rename ACS variables — select_variables_by_name","text":"","code":"if (FALSE) { # \\dontrun{ codebook = tidycensus::load_variables(dataset = \"acs5\", year = 2022) select_variables_by_name(\"B16005_\", census_codebook = codebook) } # }"},{"path":"https://ui-research.github.io/urbnindicators/reference/urbnindicators-package.html","id":null,"dir":"Reference","previous_headings":"","what":"urbnindicators: Out of the Box Social Science Indicators from the American Community Survey (ACS) — urbnindicators-package","title":"urbnindicators: Out of the Box Social Science Indicators from the American Community Survey (ACS) — urbnindicators-package","text":"many packages available facilitate queries Census Bureau API, subsequent steps analysis workflow still require significant work (much must repeated analysis analysis), identifying selecting relevant variables, determining accurately calculate derived measures (e.g., percentages), naming variables semantically. urbnindicators abstracts much process away provides users simple interface obtain commonly-used social sciences measures ACS.","code":""},{"path":[]},{"path":"https://ui-research.github.io/urbnindicators/reference/urbnindicators-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"urbnindicators: Out of the Box Social Science Indicators from the American Community Survey (ACS) — urbnindicators-package","text":"Maintainer: Curran-Groome wcurrangroome@gmail.com","code":""},{"path":[]},{"path":"https://ui-research.github.io/urbnindicators/news/index.html","id":"v0009301-development-version","dir":"Changelog","previous_headings":"","what":"v0.0.0.9301","title":"urbnindicators (development version)","text":"Significantly overhauled calculations coefficients variation","code":""},{"path":"https://ui-research.github.io/urbnindicators/news/index.html","id":"v0009300-development-version","dir":"Changelog","previous_headings":"","what":"v0.0.0.9300","title":"urbnindicators (development version)","text":"Adding make_pretty_names() Reorganizing References Updating Getting Started vignette Removing Coefficients Variation vignette functionality robust Updating README","code":""},{"path":"https://ui-research.github.io/urbnindicators/news/index.html","id":"v0009100-development-version","dir":"Changelog","previous_headings":"","what":"v0.0.0.9100","title":"urbnindicators (development version)","text":"Adding generate_codebook() Adding calculate_cvs() Updating README","code":""}]
